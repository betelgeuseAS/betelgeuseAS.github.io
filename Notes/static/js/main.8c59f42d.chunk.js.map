{"version":3,"sources":["components/ColorPicker.js","components/NoteEditor.js","components/Note.js","components/NotesGrid.js","constants/constants.js","containers/App.js","actions/noteEditorAction.js","serviceWorker.js","reducers/noteEditor.js","reducers/index.js","store/configureStore.js","index.js"],"names":["COLORS","ColorPicker","_ref","value","onChange","react_default","a","createElement","className","map","color","key","style","backgroundColor","onClick","bind","defaultProps","NoteEditor","title","text","onChangeTitle","onChangeText","onChangeColor","onNoteAdd","type","placeholder","rows","src_components_ColorPicker","Note","onNoteDelete","onNoteEdit","children","NotesGrid","notes","lib_default","options","itemSelector","gutter","isFitWidth","note","src_components_Note","_id","ADD_NOTE","DELETE_NOTE","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTitleChange","target","setState","handleTextChange","_ref2","handleColorChange","handleNoteAdd","_this$state","state","length","createNote","v4","handleNoteDelete","id","deleteNote","handelNoteEdit","_ref3","_this$state2","src_components_NoteEditor","components_NotesGrid","Component","connect","store","console","log","dispatch","payload","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","arguments","undefined","action","concat","toConsumableArray","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","logger","ReactDOM","render","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAIMA,eAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAE5EC,EAAc,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,SAC3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZR,EAAOS,IAAI,SAAAC,GAAK,OACbL,EAAAC,EAAAC,cAAA,OACEI,IAAKD,EACLF,UAAWL,IAAUO,EAAQ,oBAAsB,6BACnDE,MAAO,CAAEC,gBAAiBH,GAC1BI,QAASV,EAASW,KAAK,KAAML,SAczCT,EAAYe,aAAe,CACzBb,MAAO,UACPC,SAAU,cAGGH,QC5BTgB,EAAa,SAAAf,GAAiF,IAA/EgB,EAA+EhB,EAA/EgB,MAAOC,EAAwEjB,EAAxEiB,KAAMT,EAAkER,EAAlEQ,MAAOU,EAA2DlB,EAA3DkB,cAAeC,EAA4CnB,EAA5CmB,aAAcC,EAA8BpB,EAA9BoB,cAAeC,EAAerB,EAAfqB,UACjF,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,OACLrB,MAAOe,EACPV,UAAU,kBACViB,YAAY,cACZrB,SAAUgB,IAEZf,EAAAC,EAAAC,cAAA,YACEkB,YAAY,kBACZtB,MAAOgB,EACPO,KAAM,EACNlB,UAAU,iBACVJ,SAAUiB,IAEZhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACoB,EAAD,CACExB,MAAOO,EACPN,SAAUkB,IAEZjB,EAAAC,EAAAC,cAAA,UACEC,UAAU,mBAEVM,QAASS,GACVlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAgBxBS,EAAWD,aAAe,CACxBE,MAAO,GACPC,KAAM,GACNT,MAAO,UACPU,cAAe,aACfC,aAAc,aACdC,cAAe,aACfC,UAAW,cAGEN,iCCrDTW,UAAO,SAAA1B,GAAwD,IAAtDQ,EAAsDR,EAAtDQ,MAAOQ,EAA+ChB,EAA/CgB,MAAOW,EAAwC3B,EAAxC2B,aAAcC,EAA0B5B,EAA1B4B,WAAYC,EAAc7B,EAAd6B,SAC/CnB,EAAQ,CAAEC,gBAAiBH,GACjC,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,MAAOA,GAC3BP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcM,QAASe,GAAcxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAClEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeM,QAASgB,GAAYzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAChEU,EAAQb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaU,GAAc,KAClDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYuB,MAYjCH,EAAKZ,aAAe,CAClBN,MAAO,UACPQ,MAAO,GACPW,aAAc,aACdE,SAAU,IAGGH,QCxBTI,EAAY,SAAA9B,GAAuC,IAArC+B,EAAqC/B,EAArC+B,MAAOJ,EAA8B3B,EAA9B2B,aAAcC,EAAgB5B,EAAhB4B,WASvC,OACEzB,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAASE,UAAU,YAAY2B,QATV,CACrBC,aAAc,QAIdC,OAAQ,GACRC,YAAY,IAITL,EAAMxB,IAAI,SAAC8B,GAAD,OACPlC,EAAAC,EAAAC,cAACiC,EAAD,CACE7B,IAAK4B,EAAKE,IACVvB,MAAOqB,EAAKrB,MACZW,aAAcA,EAAad,KAAK,KAAMwB,EAAKE,KAC3CX,WAAYA,EAAWf,KAAK,KAAMwB,GAClC7B,MAAO6B,EAAK7B,OACZ6B,EAAKpB,UAYjBa,EAAUhB,aAAe,CACvBiB,MAAO,GACPJ,aAAc,cAGDG,QCzCFU,EAAW,WACXC,EAAc,kBCOrBC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KASRQ,kBAAoB,SAAAnD,GAA2B,IAAdC,EAAcD,EAAxBoD,OAAUnD,MAC/B2C,EAAKS,SAAS,CAACrC,MAAOf,KAXL2C,EAanBU,iBAAmB,SAAAC,GAA2B,IAAdtD,EAAcsD,EAAxBH,OAAUnD,MAC9B2C,EAAKS,SAAS,CAACpC,KAAMhB,KAdJ2C,EAgBnBY,kBAAoB,SAAChD,GACnBoC,EAAKS,SAAS,CAAE7C,WAjBCoC,EAmBnBa,cAAgB,WAAM,IAAAC,EACSd,EAAKe,MAA3B3C,EADa0C,EACb1C,MAAOC,EADMyC,EACNzC,KAAMT,EADAkD,EACAlD,OAChBQ,EAAM4C,OAAS,GAAK3C,EAAK2C,OAAS,IACpChB,EAAKD,MAAMkB,WAAW,CACpBtB,IAAKuB,eACL9C,MAAOA,EACPC,KAAMA,EACNT,MAAOA,IAGXoC,EAAKS,SAAS,CAACrC,MAAO,GAAIC,KAAM,GAAIT,MAAO,aA7B1BoC,EA+BnBmB,iBAAmB,SAACC,GAClBpB,EAAKD,MAAMsB,WAAWD,IAhCLpB,EAkCnBsB,eAAiB,SAAAC,GAA0B,IAAxBnD,EAAwBmD,EAAxBnD,MAAOC,EAAiBkD,EAAjBlD,KAAMT,EAAW2D,EAAX3D,MAC9BoC,EAAKS,SAAS,CAACrC,QAAOC,OAAMT,WAjC5BoC,EAAKe,MAAQ,CACXpB,IAAK,EACLvB,MAAO,GACPC,KAAM,GACNT,MAAO,WANQoC,wEAsCV,IAAAwB,EACsBrB,KAAKY,MAA3B3C,EADAoD,EACApD,MAAOC,EADPmD,EACOnD,KAAMT,EADb4D,EACa5D,MACb6B,EAAQU,KAAKJ,MAAbN,KACP,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,SACAH,EAAAC,EAAAC,cAACgE,EAAD,CACEnD,cAAe6B,KAAKI,kBACpBhC,aAAc4B,KAAKO,iBACnBlC,cAAe2B,KAAKS,kBACpBnC,UAAW0B,KAAKU,cAChBzC,MAAOA,EACPC,KAAMA,EACNT,MAAOA,IAETL,EAAAC,EAAAC,cAACiE,EAAD,CACEvC,MAAOM,EACPV,aAAcoB,KAAKgB,iBACnBnC,WAAYmB,KAAKmB,yBAzDTK,aAkFHC,cAlBS,SAAAC,GAEtB,OADAC,QAAQC,IAAIF,GACL,CACLpC,KAAMoC,EAAMpC,OAIW,SAAAuC,GACzB,MAAO,CACLf,WAAY,SAAAxB,GAAI,OAAIuC,EC7EjB,SAAoBvC,GACzB,MAAO,CACLf,KAAMkB,EACNqC,QAAS,CACPtC,IAAKF,EAAKE,IACVvB,MAAOqB,EAAKrB,MACZC,KAAMoB,EAAKpB,KACXT,MAAO6B,EAAK7B,QDsEeqD,CAAWxB,KACxC4B,WAAY,SAAAD,GAAE,OAAIY,ECjEf,SAAoBZ,GACzB,MAAO,CACL1C,KAAMmB,EACNoC,QAASb,GD8DkBC,CAAWD,OAQ3BQ,CAA6C9B,GE9ExCoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECfAC,EAAe,CACnB,CACE5C,IAAK,uCACLvB,MAAO,2BACPC,KAAM,2MACNT,MAAO,WAET,CACE+B,IAAK,uCACLvB,MAAO,cACPC,KAAM,sDACNT,MAAO,WAET,CACE+B,IAAK,uCACLvB,MAAO,yBACPC,KAAM,2QACNT,MAAO,WAET,CACE+B,IAAK,uCACLvB,MAAO,+BACPC,KAAM,mZACNT,MAAO,WAET,CACE+B,IAAK,uCACLvB,MAAO,YACPC,KAAM,iJACNT,MAAO,WAET,CACE+B,IAAK,uCACLvB,MAAO,8BACPC,KAAM,+KACNT,MAAO,WAET,CACE+B,IAAK,uCACLvB,MAAO,iBACPC,KAAM,yEACNT,MAAO,YCzCJ,IAAM4E,EAAcC,YAAgB,CACzChD,KD6CK,WAAyD,IAA9BsB,EAA8B2B,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,EAAcK,EAAQF,UAAA1B,OAAA,EAAA0B,UAAA,QAAAC,EAC9D,OAAOC,EAAOlE,MACZ,KAAKkB,EACH,SAAAiD,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAYc,GAAZ,CAAmB6B,EAAOX,UAC5B,KAAKpC,EACH,OAAOkB,EAAMgC,OAAO,SAAAtD,GAAI,OAAIA,EAAKE,MAAQiD,EAAOX,UAClD,QACE,OAAOlB,+BEnDPiC,EAAmBb,OAAOc,sCAAwCC,IAI3DrB,EAAQsB,YAAYX,EAAaQ,EAAiBI,YAAgBC,IAAOC,OCDtFC,IAASC,OACPjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU5B,MAAOA,GACftE,EAAAC,EAAAC,cAACiG,EAAD,OACWC,SAASC,eAAe,SJsHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8c59f42d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ColorPicker.sass';\r\n\r\nconst COLORS = ['#FFFFFF', '#80D8FF', '#FFFF8D', '#FF8A80', '#CCFF90', '#CFD8DC', '#FFD180'];\r\n\r\nconst ColorPicker = ({value, onChange}) => {\r\n  return (\r\n    <div className='colorPicker'>\r\n      {COLORS.map(color =>\r\n          <div\r\n            key={color}\r\n            className={value !== color ? 'colorPickerSwatch' : 'colorPickerSwatch selected'}\r\n            style={{ backgroundColor: color }}\r\n            onClick={onChange.bind(null, color)}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n\r\n};\r\n\r\nColorPicker.defaultProps = {\r\n  value: '#FFFFFF',\r\n  onChange: () => {}\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './NoteEditor.sass';\r\nimport ColorPicker from './ColorPicker';\r\n\r\nconst NoteEditor = ({title, text, color, onChangeTitle, onChangeText, onChangeColor, onNoteAdd}) => {\r\n    return (\r\n      <div className='noteEditor'>\r\n        <input\r\n          type='text'\r\n          value={title}\r\n          className='noteEditorTitle'\r\n          placeholder='Enter title'\r\n          onChange={onChangeTitle}\r\n        />\r\n        <textarea\r\n          placeholder='Enter note text'\r\n          value={text}\r\n          rows={5}\r\n          className='noteEditorText'\r\n          onChange={onChangeText}\r\n        />\r\n        <div className='noteEditorFooter'>\r\n          <ColorPicker\r\n            value={color}\r\n            onChange={onChangeColor}\r\n          />\r\n          <button\r\n            className='NoteEditorButton'\r\n            //disabled={!this.state.text}\r\n            onClick={onNoteAdd}\r\n          ><i className=\"fa fa-plus\"/></button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nNoteEditor.propTypes = {\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onChangeTitle: PropTypes.func,\r\n  onChangeText: PropTypes.func,\r\n  onChangeColor: PropTypes.func,\r\n  onNoteAdd: PropTypes.func\r\n};\r\n\r\nNoteEditor.defaultProps = {\r\n  title: '',\r\n  text: '',\r\n  color: '#FFFFFF',\r\n  onChangeTitle: () => {},\r\n  onChangeText: () => {},\r\n  onChangeColor: () => {},\r\n  onNoteAdd: () => {}\r\n};\r\n\r\nexport default NoteEditor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Note.sass';\r\n\r\nconst Note = ({color, title, onNoteDelete, onNoteEdit, children}) => {\r\n  const style = { backgroundColor: color };\r\n  return (\r\n    <div className='note' style={style}>\r\n      <span className='noteDelIcon' onClick={onNoteDelete}><i className=\"fa fa-times\"/></span>\r\n      <span className=\"noteEditIcon\" onClick={onNoteEdit}><i className=\"fa fa-pencil\"/></span>\r\n      {title ? <h4 className='noteTitle'>{title}</h4> : null}\r\n      <div className='noteText'>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNote.propTypes = {\r\n  color: PropTypes.string,\r\n  title: PropTypes.string,\r\n  onNoteDelete: PropTypes.func,\r\n  children: PropTypes.string\r\n};\r\n\r\nNote.defaultProps = {\r\n  color: '#FFFFFF',\r\n  title: '',\r\n  onNoteDelete: () => {},\r\n  children: ''\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './NoteGrid.sass';\r\nimport Masonry from 'react-masonry-component';\r\nimport Note from './Note';\r\n\r\nconst NotesGrid = ({notes, onNoteDelete, onNoteEdit}) => {\r\n  const masonryOptions = {\r\n    itemSelector: '.note',\r\n    // columnWidth: 250,\r\n    // percentPosition: true,\r\n    // horizontalOrder: true,\r\n    gutter: 10,\r\n    isFitWidth: true\r\n  };\r\n  return (\r\n    <Masonry className='notesGrid' options={masonryOptions}>\r\n      {notes.map((note) =>\r\n          <Note\r\n            key={note._id}\r\n            title={note.title}\r\n            onNoteDelete={onNoteDelete.bind(null, note._id)}\r\n            onNoteEdit={onNoteEdit.bind(null, note)}\r\n            color={note.color}\r\n          >{note.text}</Note>\r\n        )\r\n      }\r\n    </Masonry>\r\n  );\r\n};\r\n\r\nNotesGrid.propTypes = {\r\n  notes: PropTypes.array,\r\n  onNoteDelete: PropTypes.func\r\n};\r\n\r\nNotesGrid.defaultProps = {\r\n  notes: [],\r\n  onNoteDelete: () => {}\r\n};\r\n\r\nexport default NotesGrid;\r\n","export const ADD_NOTE = 'ADD_NOTE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\n","import React, { Component } from 'react';\nimport './App.sass';\nimport { v4 } from 'uuid';\nimport { connect } from\t'react-redux';\nimport NoteEditor from '../components/NoteEditor';\nimport NotesGrid from '../components/NotesGrid';\nimport { createNote, deleteNote } from\t'../actions/noteEditorAction';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: 0,\n      title: '',\n      text: '',\n      color: '#FFFFFF'\n    }\n  }\n\n  handleTitleChange = ({ target: { value } }) => {\n    this.setState({title: value});\n  };\n  handleTextChange = ({ target: { value } }) => {\n    this.setState({text: value});\n  };\n  handleColorChange = (color) => {\n    this.setState({ color });\n  };\n  handleNoteAdd = () => {\n    const {title, text, color} = this.state;\n    if (title.length > 0 || text.length > 0) {\n      this.props.createNote({\n        _id: v4(),\n        title: title,\n        text: text,\n        color: color\n      });\n    }\n    this.setState({title: '', text: '', color: '#FFFFFF'});\n  };\n  handleNoteDelete = (id) => {\n    this.props.deleteNote(id);\n  };\n  handelNoteEdit = ({title, text, color}) => {\n    this.setState({title, text, color});\n  };\n\n  render() {\n    const {title, text, color} = this.state;\n    const {note} = this.props;\n    return (\n      <div className='app'>\n        <h2 className='appHeader'>Notes</h2>\n        <NoteEditor\n          onChangeTitle={this.handleTitleChange}\n          onChangeText={this.handleTextChange}\n          onChangeColor={this.handleColorChange}\n          onNoteAdd={this.handleNoteAdd}\n          title={title}\n          text={text}\n          color={color}\n        />\n        <NotesGrid\n          notes={note}\n          onNoteDelete={this.handleNoteDelete}\n          onNoteEdit={this.handelNoteEdit}\n        />\n      </div>\n    );\n  }\n}\n\nconst\tmapStateToProps\t=\tstore\t=> {\n  console.log(store);\n  return {\n    note:\tstore.note,\n  }\n};\n\nconst\tmapDispatchToProps = dispatch\t=> {\n  return {\n    createNote: note => dispatch(createNote(note)),\n    deleteNote: id => dispatch(deleteNote(id)),\n  }\n};\n// const\tmapDispatchToProps = dispatch\t=> ({\n//   setYear:\tyear =>\tdispatch(setYear(year))\n//   setYearAction: year\t=> dispatch(setYear(year)),\n// })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ADD_NOTE, DELETE_NOTE }\tfrom '../constants/constants';\r\n\r\n\r\n\r\nexport function\tcreateNote(note) {\r\n  return {\r\n    type:\tADD_NOTE,\r\n    payload: {\r\n      _id: note._id,\r\n      title: note.title,\r\n      text: note.text,\r\n      color: note.color\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport function\tdeleteNote(id) {\r\n  return {\r\n    type:\tDELETE_NOTE,\r\n    payload: id,\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_NOTE, DELETE_NOTE } from '../constants/constants';\r\n\r\n\r\nconst initialState = [\r\n  {\r\n    _id: 'e078a854-ca1b-4184-cv11-b9c1h29a1631',\r\n    title: 'At vero eos et accusamus',\r\n    text: 'Blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi.',\r\n    color: '#FFFF8D'\r\n  },\r\n  {\r\n    _id: 'b128a167-ca0c-4184-ad11-v2c1f79a1999',\r\n    title: 'Ducimus qui',\r\n    text: 'Temporibus autem quibusdam et aut officiis debitis.',\r\n    color: '#FF8A80'\r\n  },\r\n  {\r\n    _id: 'w844a167-fg1b-2284-ad11-s6c1j11a1693',\r\n    title: 'Iusto odio dignissimos',\r\n    text: 'Laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus.',\r\n    color: '#80D8FF'\r\n  },\r\n  {\r\n    _id: 'cg78a754-ca4b-4184-cv11-b9c1111a1gn2',\r\n    title: 'Necessitatibus saepe eveniet',\r\n    text: 'Saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur.',\r\n    color: '#CCFF90'\r\n  },\r\n  {\r\n    _id: 'fd8da854-ca1b-4184-cv11-2222h29a1gfv',\r\n    title: 'Aut rerum',\r\n    text: 'Cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will.',\r\n    color: '#FFD180'\r\n  },\r\n  {\r\n    _id: 'dd78fc54-ca11-4184-gd11-b9c1h9ba1669',\r\n    title: 'Voluptates repudiandae sint',\r\n    text: 'On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire.',\r\n    color: '#80D8FF'\r\n  },\r\n  {\r\n    _id: 'y614a854-cf9b-4184-1b11-d5c1h29a16fg',\r\n    title: 'Non recusandae',\r\n    text: 'Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis.',\r\n    color: '#FFFFFF'\r\n  },\r\n];\r\n//['#FFFFFF', '#80D8FF', '#FFFF8D', '#FF8A80', '#CCFF90', '#CFD8DC', '#FFD180']\r\n\r\nexport function\tnoteEditorReducer(state\t=\tinitialState, action)\t{\r\n  switch(action.type)\t{\r\n    case ADD_NOTE:\r\n      return [ ...state, action.payload ];\r\n    case DELETE_NOTE:\r\n      return state.filter(note => note._id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { noteEditorReducer } from  './noteEditor';\r\n\r\nexport\tconst\trootReducer\t=\tcombineReducers({\r\n  note:\tnoteEditorReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose} from\t'redux';\r\nimport { rootReducer } from\t'../reducers/index';\r\nimport thunk from\t'redux-thunk';\r\nimport logger\tfrom 'redux-logger';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// export const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)));\r\n//or:\r\n// const middleware = composeEnhancers(\r\n//   applyMiddleware(thunk)\r\n// );\r\n// const store = createStore(rootReducer, middleware);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport\t{\tProvider\t}\tfrom\t'react-redux';\nimport { store } from\t'./store/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}